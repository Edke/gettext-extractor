<?php

require_once dirname(__FILE__).'/FilterTest.php';
require_once dirname(__FILE__).'/../../Filters/NetteLatteFilter.php';

/**
 * Test class for NetteLatteFilter.
 * Generated by PHPUnit on 2010-12-15 at 21:59:47.
 */
class NetteLatteFilterTest extends FilterTest {

	protected function setUp() {
		$this->object = new NetteLatteFilter();
		$this->file = dirname(__FILE__) . '/../data/default.latte';
	}

	public function testFunctionCallWithVariables() {
		$messages = $this->object->extract($this->file);

		$this->assertNotContains(array(
			iFilter::LINE => 7,
			iFilter::SINGULAR => '$foo'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 8,
			iFilter::SINGULAR => '$bar',
			iFilter::CONTEXT => 'context'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 9,
			iFilter::SINGULAR => 'I see %d little indian!',
			iFilter::PLURAL => 'I see %d little indians!',
			iFilter::CONTEXT => '$baz'
		),$messages);
	}

	public function testConstantsArrayMethodsAndFunctions() {
		$messages = $this->object->extract(dirname(__FILE__) . '/../data/test.latte');

		$this->assertContains(array(
			iFilter::LINE => 1,
			iFilter::SINGULAR => 'Testovaci retezec'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 3,
			iFilter::SINGULAR => '69'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 4,
			iFilter::SINGULAR => 'CONSTANT'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 5,
			iFilter::SINGULAR => 'Class::CONSTANT'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 6,
			iFilter::SINGULAR => 'Class::method()'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 7,
			iFilter::SINGULAR => '$array[0]'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 8,
			iFilter::SINGULAR => '$varFunc()'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 9,
			iFilter::SINGULAR => '$object->method()'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 10,
			iFilter::SINGULAR => 'function()'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 11,
			iFilter::SINGULAR => 'function()->fluent()'
		),$messages);

		$this->assertNotContains(array(
			iFilter::LINE => 12,
			iFilter::SINGULAR => 'Class::$var[0][\'key\']($arg)->method()->method()'
		),$messages);
	}
}
